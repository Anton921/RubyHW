M = [1, 2, 3, 4, 5, 6, 7, 8, 9]

def push1(m)
  m1 = []
  for i in 0...m.length
    m1.push(m[i])
  end
  return m1
end

#1 Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
puts 'Завдання 1'
m1 = []
for i in 0...M.length
  if i%2==0
    puts M[i]
  else
    m1.push(M[i])
  end
end
puts m1.join(' ')
puts '-----------------------------------'

#2 Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.
puts 'Завдання 2'
m1.clear
m1 = push1(M)
m1.each_with_index {|num,i| puts num if i%2 != 0}
m1.each_with_index {|num,i| puts num if i%2 == 0}
puts '-----------------------------------'

#5 Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.
puts 'Завдання 5'
m1.clear
m1.push(M[0])
for i in 1...(M.length - 1)
  if M[i]%2 == 0
    m1.push(M[i]+M[0])
  else
    m1.push(M[i])
  end
end
m1.push(M[M.length - 1])
puts m1.join(' ')
puts '-----------------------------------'

#6 Дан целочисленный массив. Преобразовать его, прибавив к четным числам последний элемент. Первый и последний элементы массива не изменять.
puts 'Завдання 6'
M.each_with_index do |num,i|
  if (num%2 == 0) && i != 0 && i != M.length - 1
    puts num + M[M.length - 1]
  else
    puts num
  end
end
puts '-----------------------------------'

#7 Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять.
puts 'Завдання 7'
m1.clear
m1.push(M[0])
for i in 1...(M.length - 1)
  if M[i]%2 != 0
    m1.push(M[i]+M[M.length - 1])
  else
    m1.push(M[i])
  end
end
m1.push(M[M.length - 1])
puts m1.join(' ')
puts '-----------------------------------'

#8 Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам первый элемент. Первый и последний элементы массива не изменять.
puts 'Завдання 8'
M.each_with_index do |num,i|
  if (num%2 != 0) && i != 0 && i != M.length - 1
    puts num + M[0]
  else
    puts num
  end
end
puts '-----------------------------------'


m2 = [1, -1, 2, -2, 3, -3]
#9 Дан целочисленный массив. Заменить все положительные элементы на значение минимального.
puts 'Завдання 9'
m1.clear
m1 = push1(m2)
for i in 0...m1.length
  if m2[i] >= 0
    m1[i] = m2.min
  end
end
puts m1.join(' ')
puts '-----------------------------------'

#10 Дан целочисленный массив. Заменить все положительные элементы на значение максимального.
puts 'Завдання 10'
m2.each_with_index do |num,i|
  if (num >= 0)
    puts m2.max
  else
    puts num
  end
end
puts '-----------------------------------'

#11 Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.
puts 'Завдання 11'
m1.clear
m1 = push1(m2)
for i in 0...m1.length
  if m2[i] < 0
    m1[i] = m2.min
  end
end
puts m1.join(' ')
puts '-----------------------------------'

#12 Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.
puts 'Завдання 12'
m2.each_with_index do |num,i|
  if (num < 0)
    puts m2.max
  else
    puts num
  end
end
puts '-----------------------------------'

#13 Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.
puts 'Завдання 13'
m1.clear
m1 = push1(m2)
m1.shift
m1.push(m2[0])
puts m1.join(' ')
puts '-----------------------------------'

#14 Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.
puts 'Завдання 14'
m1.clear
for i in 0...m2.length
  if i == 0
    m1.push(m2[m2.length - 1])
  else
    m1.push(m2[i - 1])
  end
end
puts m1.join(' ')
puts '-----------------------------------'

#15 Дан целочисленный массив. Проверить, образуют ли элементы арифметическую прогрессию. Если да, то вывести разность прогрессии, если нет - вывести nil.
puts 'Завдання 15'
def arif (m)
  k = 0
  for i in 1...m.length
    if (m[i]-m[i-1]) == (m[1]-m[0])
      k += 1
    end
  end
  if k == (m.length - 1)
    puts (m[1]-m[0])
  else
    puts nil
  end
end

m1 = [1,2,3,4,5]
arif(m1)
m1 = [1,2,3,4,4]
arif(m1)
puts '-----------------------------------'

#16 Дан целочисленный массив. Проверить, образуют ли элементы геометрическую прогрессию. Если да, то вывести знаменатель прогрессии, если нет - вывести nil.
puts 'Завдання 16'
def geom(m)
  k1 = (m[0]*((m[1]/m[0])**m.length - 1))/((m[1]/m[0]) - 1)
  k2 = 0
  m.each {|num| k2 += num}
  if k1 == k2
    puts m[1]/m[0]
  else
    puts nil
  end
end

m1 = [1, 2, 4, 8]
geom(m1)
m1 = [1, 2, 4, 6]
geom(m1)
puts '-----------------------------------'

#17 Дан целочисленный массив. Найти количество его локальных максимумов.
puts 'Завдання 17'
m1 = [1,2,3,4,5]
k = 0
m1.each_with_index {|num| k += 1 if num == m1.max}
puts k
m1 = [1,2,3,4,4]
k = 0
m1.each_with_index {|num| k += 1 if num == m1.max}
puts k
puts '-----------------------------------'

#18 Дан целочисленный массив. Найти количество его локальных минимумов.
puts 'Завдання 18'
m1 = [1,2,3,4,5]
k = 0
m1.each_with_index {|num| k += 1 if num == m1.min}
puts k
m1 = [1,2,3,4,1]
k = 0
m1.each_with_index {|num| k += 1 if num == m1.min}
puts k
puts '-----------------------------------'

m1 = [1,1,2,3,4,5,5]
#19 Дан целочисленный массив. Найти максимальный из его локальных максимумов.
puts 'Завдання 19'
puts m1.max
puts '-----------------------------------'

#20 Дан целочисленный массив. Найти минимальный из его локальных минимумов.
puts 'Завдання 20'
puts m1.min
puts '-----------------------------------'

#21 Дан целочисленный массив. Определить количество участков, на которых его элементы монотонно возрастают.
puts 'Завдання 21'
m1 =[1,2,3,2,3,4,4,5,6]
k = 0
q = 0
w = 0
for i in 1...m1.length
  if (m1[i]-m1[i-1]) == (m1[q+1]-m1[q]) && (i != (m1.length - 1))
    k += 1
  elsif (m1[i-1]-m1[i-2]) > 0
    q = i
    w += 1
  elsif ((m1[i]-m1[i-1]) == (m1[q+1]-m1[q])) && (i == (m1.length - 1))
    w += 1
  end
end
if k != 0
  puts w
end
puts '-----------------------------------'

#22 Дан целочисленный массив. Определить количество участков, на которых его элементы монотонно убывают.
puts 'Завдання 22'
m1 =[3,2,1,3,2,1,3,2,1]
k = 0
q = 0
w = 0
for i in 1...m1.length
  if ((m1[i]-m1[i-1]) == (m1[q+1]-m1[q])) && (i != (m1.length - 1))
    k += 1
  elsif (m1[i-1]-m1[i-2]) < 0
    q = i
    w += 1
  elsif ((m1[i]-m1[i-1]) == (m1[q+1]-m1[q])) && (i == (m1.length - 1))
    w += 1
  end
end
if k != 0
  puts w
end
puts '-----------------------------------'

#23 Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наиболее близок к данному числу.
puts 'Завдання 23'
m1 = [1,2,3,5,6]
k = 4
m2.clear
m1.each_with_index {|num| m2.push((num-k).abs)}
for i in m2.index(m2.min)...m2.length
  if m2[i] == m2.min
    puts i+1
  end
end
puts '-----------------------------------'

#24 Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наименее близок к данному числу.
puts 'Завдання 24'
m1 = [1,2,3,4,5,6,7]
k = 4
m2.clear
m1.each_with_index {|num| m2.push((num-k).abs)}
for i in m2.index(m2.max)...m2.length
  if m2[i] == m2.max
    puts i+1
  end
end
puts '-----------------------------------'

#25 Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.
puts 'Завдання 25'
m1 = [1,-1,2,-2,3,-3]
m2.clear
for i in 0...m1.length
  if m1[i] > 0
    m2.push(0)
    m2.push(m1[i])
  else
    m2.push(m1[i])
  end
end
puts m2.join(' ')
puts '-----------------------------------'

#26 Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.
puts 'Завдання 26'
m1 = [1,-1,2,-2,3,-3]
m2.clear
for i in 0...m1.length
  if m1[i] < 0
    m2.push(0)
    m2.push(m1[i])
  else
    m2.push(m1[i])
  end
end
puts m2.join(' ')
puts '-----------------------------------'

#27 Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.
puts 'Завдання 27'
m1 = [1,-1,2,-2,3,-3]
m2.clear
for i in 0...m1.length
  if m1[i] > 0
    m2.push(m1[i])
    m2.push(0)
  else
    m2.push(m1[i])
  end
end
puts m2.join(' ')
puts '-----------------------------------'

#28 Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.
puts 'Завдання 28'
m1 = [1,-1,2,-2,3,-3]
m2.clear
for i in 0...m1.length
  if m1[i] < 0
    m2.push(m1[i])
    m2.push(0)
  else
    m2.push(m1[i])
  end
end
puts m2.join(' ')
puts '-----------------------------------'

#29 Дан целочисленный массив. Упорядочить его по возрастанию.
puts 'Завдання 29'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
swap = true
size = m1.length - 1
while swap
  swap = false
  for i in 0...size
    swap = m1[i] > m1[i + 1]
    m1[i], m1[i+1] = m1[i + 1], m1[i] if swap
  end
  size -= 1
end
puts m1.join(' ')
puts '-----------------------------------'

#30 Дан целочисленный массив. Упорядочить его по убыванию.
puts 'Завдання 30'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m2.clear
for i in 0...m1.length
  m2.push(m1.max)
  m1.delete_at(m1.index(m1.max))
end
puts m2.join(' ')
puts '-----------------------------------'

#31 Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность.
puts 'Завдання 31'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m2.clear
m3 = []
for i in 0...m1.length
  m2.push(m1.max)
  m3.push(m1.index(m1.max))
  m1[m1.index(m1.max)] -= 100*m1.max
end
puts m2.join(' ')
puts m3.join(' ')
puts '-----------------------------------'

#32 Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность.
puts 'Завдання 32'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m2.clear
m3.clear
for i in 0...m1.length
  m2.push(m1.min)
  m3.push(m1.index(m1.min))
  m1[m1.index(m1.min)] += 100*m1.max
end
puts m2.join(' ')
puts m3.join(' ')
puts '-----------------------------------'

#33 Дан целочисленный массив. Найти индекс минимального элемента.
puts 'Завдання 33'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.each_with_index {|num,i| puts i if num == m1.min}
puts '-----------------------------------'

#34 Дан целочисленный массив. Найти индекс максимального элемента.
puts 'Завдання 34'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.each_with_index {|num,i| puts i if num == m1.max}
puts '-----------------------------------'

#35 Дан целочисленный массив. Найти индекс первого минимального элемента.
puts 'Завдання 35'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.index(m1.min)
puts '-----------------------------------'

#36 Дан целочисленный массив. Найти индекс первого максимального элемента.
puts 'Завдання 36'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.index(m1.max)
puts '-----------------------------------'

#37 Дан целочисленный массив. Найти индекс последнего минимального элемента.
puts 'Завдання 37'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.index(m1.min)
puts '-----------------------------------'

#38 Дан целочисленный массив. Найти индекс последнего максимального элемента.
puts 'Завдання 38'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.index(m1.max)
puts '-----------------------------------'

#39 Дан целочисленный массив. Найти количество минимальных элементов.
puts 'Завдання 39'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
k=0
m1.each_with_index {|num| k+=1 if num == m1.min}
puts k
puts '-----------------------------------'

#40 Дан целочисленный массив. Найти количество максимальных элементов.
puts 'Завдання 40'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
k=0
m1.each_with_index {|num| k+=1 if num == m1.max}
puts k
puts '-----------------------------------'

#41 Дан целочисленный массив. Найти минимальный четный элемент.
puts 'Завдання 41'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reject!{|num| num if num%2 != 0}
m1.each_with_index {|num| puts num if num == m1.min}
puts '-----------------------------------'

#42 Дан целочисленный массив. Найти минимальный нечетный элемент.
puts 'Завдання 42'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reject!{|num| num if num%2 == 0}
m1.each_with_index {|num| puts num if num == m1.min}
puts '-----------------------------------'

#43 Дан целочисленный массив. Найти максимальный четный элемент.
puts 'Завдання 43'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reject!{|num| num if num%2 != 0}
m1.each_with_index {|num| puts num if num == m1.max}
puts '-----------------------------------'

#44 Дан целочисленный массив. Найти максимальный нечетный элемент.
puts 'Завдання 44'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reject!{|num| num if num%2 == 0}
m1.each_with_index {|num| puts num if num == m1.max}
puts '-----------------------------------'

#45 Дан целочисленный массив. Найти минимальный положительный элемент.
puts 'Завдання 45'
m1 = [5, -20, 3, -11, 1, -17, 3, -12, 8, -10]
m1.reject!{|num| num if num <= 0}
m1.each_with_index {|num| puts num if num == m1.min}
puts '-----------------------------------'

#46 Дан целочисленный массив. Найти максимальный отрицательный элемент.
puts 'Завдання 46'
m1 = [5, -20, 3, -11, 1, -17, 3, -12, 8, -10]
m1.reject!{|num| num if num >= 0}
m1.each_with_index {|num| puts num if num == m1.max}
puts '-----------------------------------'

#47 Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале.
puts 'Завдання 47'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts 'Введіть елемент початку інтервалу'
a = gets.chop.to_i
puts 'Введіть елемент кінця інтервалу'
b = gets.chop.to_i
m1.reject!{|num| num if (m1.index(num) < a) || (m1.index(num) > b)}
puts m1.min
puts '-----------------------------------'

#48 Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале.
puts 'Завдання 48'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts 'Введіть елемент початку інтервалу'
a = gets.chop.to_i
puts 'Введіть елемент кінця інтервалу'
b = gets.chop.to_i
m1.reject!{|num| num if (m1.index(num) < a) || (m1.index(num) > b)}
puts m1.max
puts '-----------------------------------'

#49 Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.
puts 'Завдання 49'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.index(m1.min)
puts '-----------------------------------'

#50 Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.
puts 'Завдання 50'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.index(m1.max)
puts '-----------------------------------'

#51 Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
puts 'Завдання 51'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.length - 1 - m1.index(m1.max)
puts '-----------------------------------'

#52 Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .
puts 'Завдання 52'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
puts m1.length - 1 - m1.index(m1.min)
puts '-----------------------------------'

#53 Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
puts 'Завдання 53'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.length - 1 - m1.index(m1.max)
puts '-----------------------------------'

#54 Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.
puts 'Завдання 54'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.length - 1 - m1.index(m1.min)
puts '-----------------------------------'

#55 Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
puts 'Завдання 55'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.index(m1.max)
puts '-----------------------------------'

#56 Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .
puts 'Завдання 56'
m1 = [5, 20, 3, 11, 1, 17, 3, 12, 8, 10]
m1.reverse!
puts m1.index(m1.min)
puts '-----------------------------------'
